<HTML><HEAD><TITLE>All_About_Your_64-Online-Help Version 0.64</TITLE></HEAD>
<BODY><PRE>

  +------------------------------------------------------------------------
  |
  |      BASIC ROM LISTING
  |
  +------------------------------------------------------------------------
  |
  | BASIC related topics:
  |
  |   <A HREF="CHRSTABU.HTM">CHR$/ASC-Table for Upper Case/Graphics</A>
  |   <A HREF="CHRSTABL.HTM">CHR$/ASC-Table for Lower Case/Upper Case</A>
  |
  |
  |   <A HREF="ROMA000.HTM">$A000/40960</A>      Restart Vectors
  |   <A HREF="ROMA004.HTM">$A004/40964</A>      'CBMBASIC'-Identifier
  |   <A HREF="ROMA00C.HTM">$A00C/40972</A>      BASIC Command Vectors - 1
  |   <A HREF="ROMA052.HTM">$A052/41042</A>      BASIC Function Vectors
  |   <A HREF="ROMA080.HTM">$A080/41088</A>      BASIC Operator Vectors
  |   <A HREF="ROMA09E.HTM">$A09E/41118</A>      BASIC Command Keyword Table
  |   <A HREF="ROMA129.HTM">$A129/41257</A>      BASIC Misc. Keyword Table
  |   <A HREF="ROMA140.HTM">$A140/41280</A>      BASIC Operator Keyword Table
  |   <A HREF="ROMA14D.HTM">$A14D/41293</A>      BASIC Function Keyword Table
  |   <A HREF="ROMA19E.HTM">$A19E/41374</A>      Error Message Table
  |   <A HREF="ROMA328.HTM">$A328/41768</A>      Error Message Pointers
  |   <A HREF="ROMA364.HTM">$A364/41828</A>      Misc. Messages
  |   <A HREF="ROMA38A.HTM">$A38A/41866</A>      Find FOR/GOSUB Entry on Stack
  |   <A HREF="ROMA3B8.HTM">$A3B8/41912</A>      Open Space in Memory
  |   <A HREF="ROMA3FB.HTM">$A3FB/41979</A>      Check Stack Depth
  |   <A HREF="ROMA408.HTM">$A408/41992</A>      Check Memory Overlap
  |   <A HREF="ROMA435.HTM">$A435/42037</A>      Output ?OUT OF MEMORY Error
  |   <A HREF="ROMA437.HTM">$A437/42039</A>      Error Routine
  |   <A HREF="ROMA469.HTM">$A469/42089</A>      Break Entry
  |   <A HREF="ROMA474.HTM">$A474/42100</A>      Restart BASIC
  |   <A HREF="ROMA480.HTM">$A480/42112</A>      Input &amp; Identify BASIC Line
  |   <A HREF="ROMA49C.HTM">$A49C/42140</A>      Get Line Number &amp; Tokenise Text
  |   <A HREF="ROMA4A2.HTM">$A4A2/42146</A>      Insert BASIC Text
  |   <A HREF="ROMA533.HTM">$A533/42291</A>      Rechain Lines
  |   <A HREF="ROMA560.HTM">$A560/42336</A>      Input Line Into Buffer
  |   <A HREF="ROMA579.HTM">$A579/42361</A>      Tokenise Input Buffer
  |   <A HREF="ROMA613.HTM">$A613/42515</A>      Search for Line Number
  |   <A HREF="ROMA642.HTM">$A642/42562</A>      Perform [new]
  |   <A HREF="ROMA65E.HTM">$A65E/42590</A>      Perform [clr]
  |   <A HREF="ROMA68E.HTM">$A68E/42638</A>      Reset TXTPTR
  |   <A HREF="ROMA69C.HTM">$A69C/42652</A>      Perform [list]
  |   <A HREF="ROMA717.HTM">$A717/42775</A>      Handle LIST Character
  |   <A HREF="ROMA742.HTM">$A742/42818</A>      Perform [for]
  |   <A HREF="ROMA7AE.HTM">$A7AE/42926</A>      BASIC Warm Start
  |   <A HREF="ROMA7C4.HTM">$A7C4/42948</A>      Check End of Program
  |   <A HREF="ROMA7E1.HTM">$A7E1/42977</A>      Prepare to execute statement
  |   <A HREF="ROMA7ED.HTM">$A7ED/42989</A>      Perform BASIC Keyword
  |   <A HREF="ROMA81D.HTM">$A81D/43037</A>      Perform [restore]
  |   <A HREF="ROMA82C.HTM">$A82C/43052</A>      Perform [stop]
  |   <A HREF="ROMA82F.HTM">$A82F/43055</A>      Perform [end]
  |   <A HREF="ROMA831.HTM">$A831/43057</A>      Perform Break
  |   <A HREF="ROMA857.HTM">$A857/43095</A>      Perform [cont]
  |   <A HREF="ROMA871.HTM">$A871/43121</A>      Perform [run]
  |   <A HREF="ROMA883.HTM">$A883/43139</A>      Perform [gosub]
  |   <A HREF="ROMA8A0.HTM">$A8A0/43168</A>      Perform [goto]
  |   <A HREF="ROMA8D2.HTM">$A8D2/43218</A>      Perform [return]
  |   <A HREF="ROMA8F8.HTM">$A8F8/43256</A>      Perform [data]
  |   <A HREF="ROMA906.HTM">$A906/43270</A>      Search for Next Statement / Line
  |   <A HREF="ROMA928.HTM">$A928/43304</A>      Perform [if]
  |   <A HREF="ROMA93B.HTM">$A93B/43323</A>      Perform [rem]
  |   <A HREF="ROMA94B.HTM">$A94B/43339</A>      Perform [on]
  |   <A HREF="ROMA96B.HTM">$A96B/43371</A>      Fetch linnum From BASIC
  |   <A HREF="ROMA9A5.HTM">$A9A5/43429</A>      Perform [let]
  |   <A HREF="ROMA9C4.HTM">$A9C4/43460</A>      Assign Integer
  |   <A HREF="ROMA9D6.HTM">$A9D6/43478</A>      Assign Floating Point
  |   <A HREF="ROMA9D9.HTM">$A9D9/43481</A>      Assign String
  |   <A HREF="ROMA9E3.HTM">$A9E3/43491</A>      Assign TI$
  |   <A HREF="ROMAA2C.HTM">$AA2C/43564</A>      Add Digit to FAC#1
  |   <A HREF="ROMAA80.HTM">$AA80/43648</A>      Perform [print#]
  |   <A HREF="ROMAA86.HTM">$AA86/43654</A>      Perform [cmd]
  |   <A HREF="ROMAA9A.HTM">$AA9A/43674</A>      Print String From Memory
  |   <A HREF="ROMAAA0.HTM">$AAA0/43680</A>      Perform [print]
  |   <A HREF="ROMAAB8.HTM">$AAB8/43704</A>      Output Variable
  |   <A HREF="ROMAACA.HTM">$AACA/43722</A>      -Add zero terminator to string
  |   <A HREF="ROMAAD7.HTM">$AAD7/43735</A>      Output CR/LF
  |   <A HREF="ROMAAE8.HTM">$AAE8/43752</A>      Handle comma, TAB(, SPC(
  |   <A HREF="ROMAB1E.HTM">$AB1E/43806</A>      Output String
  |   <A HREF="ROMAB3B.HTM">$AB3B/43835</A>      Output Format Character
  |   <A HREF="ROMAB4D.HTM">$AB4D/43853</A>      Handle Bad Data
  |   <A HREF="ROMAB7B.HTM">$AB7B/43899</A>      Perform [get]
  |   <A HREF="ROMABA5.HTM">$ABA5/43941</A>      Perform [input#]
  |   <A HREF="ROMABBF.HTM">$ABBF/43967</A>      Perform [input]
  |   <A HREF="ROMABEA.HTM">$ABEA/44010</A>      Read Input Buffer
  |   <A HREF="ROMABF9.HTM">$ABF9/44025</A>      Do Input Prompt
  |   <A HREF="ROMAC06.HTM">$AC06/44038</A>      Perform [read]
  |   <A HREF="ROMAC35.HTM">$AC35/44085</A>      General Purpose Read Routine
  |   <A HREF="ROMACFC.HTM">$ACFC/44284</A>      Input Error Messages
  |   <A HREF="ROMAD1E.HTM">$AD1E/44318</A>      Perform [next]
  |   <A HREF="ROMAD61.HTM">$AD61/44385</A>      Check Valid Loop
  |   <A HREF="ROMAD8A.HTM">$AD8A/44426</A>      Confirm Result
  |   <A HREF="ROMAD9E.HTM">$AD9E/44446</A>      Evaluate Expression in Text
  |   <A HREF="ROMAE83.HTM">$AE83/44675</A>      Evaluate Single Term
  |   <A HREF="ROMAEA8.HTM">$AEA8/44712</A>      Constant - pi
  |   <A HREF="ROMAEAD.HTM">$AEAD/44717</A>      Continue Expression
  |   <A HREF="ROMAEF1.HTM">$AEF1/44785</A>      Expression in Brackets
  |   <A HREF="ROMAEF7.HTM">$AEF7/44791</A>      Test ')'
  |   <A HREF="ROMAEFA.HTM">$AEFA/44794</A>      Test '('
  |   <A HREF="ROMAEFD.HTM">$AEFD/44797</A>      Test ','
  |   <A HREF="ROMAF08.HTM">$AF08/44808</A>      Output ?SYNTAX Error
  |   <A HREF="ROMAF0D.HTM">$AF0D/44813</A>      Set up NOT Function
  |   <A HREF="ROMAF14.HTM">$AF14/44820</A>      Identify Reserved Variable
  |   <A HREF="ROMAF28.HTM">$AF28/44840</A>      Search for Variable
  |   <A HREF="ROMAF48.HTM">$AF48/44872</A>      Convert TI to ASCII String
  |   <A HREF="ROMAFA7.HTM">$AFA7/44967</A>      Identify Function Type
  |   <A HREF="ROMAFB1.HTM">$AFB1/44977</A>      Evaluate String Function
  |   <A HREF="ROMAFD1.HTM">$AFD1/45009</A>      Evaluate Numeric Function
  |   <A HREF="ROMAFE6.HTM">$AFE6/45030</A>      Perform [or], [and]
  |   <A HREF="ROMB016.HTM">$B016/45078</A>      Perform &lt;, =, &gt;
  |   <A HREF="ROMB01B.HTM">$B01B/45083</A>      Numeric Comparison
  |   <A HREF="ROMB02E.HTM">$B02E/45102</A>      String Comparison
  |   <A HREF="ROMB07E.HTM">$B07E/45182</A>      Perform [dim]
  |   <A HREF="ROMB08B.HTM">$B08B/45195</A>      Identify Variable
  |   <A HREF="ROMB0E7.HTM">$B0E7/45287</A>      Locate Ordinary Variable
  |   <A HREF="ROMB113.HTM">$B113/45331</A>      Does A hold an alphabetic character?
  |   <A HREF="ROMB11D.HTM">$B11D/45341</A>      Create New Variable
  |   <A HREF="ROMB128.HTM">$B128/45352</A>      Create Variable
  |   <A HREF="ROMB194.HTM">$B194/45460</A>      Allocate Array Pointer Space
  |   <A HREF="ROMB1A5.HTM">$B1A5/45477</A>      Constant 32768 in Flpt
  |   <A HREF="ROMB1AA.HTM">$B1AA/45482</A>      FAC#1 to Integer in A/Y
  |   <A HREF="ROMB1B2.HTM">$B1B2/45490</A>      Evaluate Text for Integer
  |   <A HREF="ROMB1BF.HTM">$B1BF/45503</A>      FAC#1 to Positive Integer
  |   <A HREF="ROMB1D1.HTM">$B1D1/45521</A>      Get Array Parameters
  |   <A HREF="ROMB218.HTM">$B218/45592</A>      Find Array
  |   <A HREF="ROMB245.HTM">$B245/45637</A>      ?BAD SUBSCRIPT
  |   <A HREF="ROMB248.HTM">$B248/45640</A>      ?ILLEGAL QUANTITY
  |   <A HREF="ROMB24D.HTM">$B24D/45645</A>      ?REDIM'D ARRAY
  |   <A HREF="ROMB261.HTM">$B261/45665</A>      Create Array
  |   <A HREF="ROMB30E.HTM">$B30E/45838</A>      Locate Element in Array
  |   <A HREF="ROMB34C.HTM">$B34C/45900</A>      Number of Bytes in Subscript
  |   <A HREF="ROMB37D.HTM">$B37D/45949</A>      Evaluate &lt;fre&gt;
  |   <A HREF="ROMB391.HTM">$B391/45969</A>      Convert Integer in (AC/YR) to Flpt
  |   <A HREF="ROMB39E.HTM">$B39E/45982</A>      Evaluate &lt;pos&gt;
  |   <A HREF="ROMB3A6.HTM">$B3A6/45990</A>      Confirm Program Mode
  |   <A HREF="ROMB3AE.HTM">$B3AE/45998</A>      ?UNDEF'D FUNCTION
  |   <A HREF="ROMB3B3.HTM">$B3B3/46003</A>      Perform [def fn]
  |   <A HREF="ROMB3E1.HTM">$B3E1/46049</A>      Check Syntax of FN
  |   <A HREF="ROMB3F4.HTM">$B3F4/46068</A>      Perform [fn]
  |   <A HREF="ROMB465.HTM">$B465/46181</A>      Evaluate &lt;str$&gt;
  |   <A HREF="ROMB487.HTM">$B487/46215</A>      Set Up String
  |   <A HREF="ROMB4D5.HTM">$B4D5/46293</A>      Save String Descriptor
  |   <A HREF="ROMB4F4.HTM">$B4F4/46324</A>      Allocate Space for String
  |   <A HREF="ROMB526.HTM">$B526/46374</A>      Garbage Collection
  |   <A HREF="ROMB5BD.HTM">$B5BD/46525</A>      Search for Next String
  |   <A HREF="ROMB606.HTM">$B606/46598</A>      Collect a String
  |   <A HREF="ROMB63D.HTM">$B63D/46653</A>      Concatenate Two Strings
  |   <A HREF="ROMB67A.HTM">$B67A/46714</A>      Store String in High RAM
  |   <A HREF="ROMB6A3.HTM">$B6A3/46755</A>      Perform String Housekeeping
  |   <A HREF="ROMB6DB.HTM">$B6DB/46811</A>      Clean Descriptor Stack
  |   <A HREF="ROMB6EC.HTM">$B6EC/46828</A>      Evaluate &lt;chr$&gt;
  |   <A HREF="ROMB700.HTM">$B700/46848</A>      Evaluate &lt;left$&gt;
  |   <A HREF="ROMB72C.HTM">$B72C/46892</A>      Evaluate &lt;right$&gt;
  |   <A HREF="ROMB737.HTM">$B737/46903</A>      Evaluate &lt;mid$&gt;
  |   <A HREF="ROMB761.HTM">$B761/46945</A>      Pull String Parameters
  |   <A HREF="ROMB77C.HTM">$B77C/46972</A>      Evaluate &lt;len&gt;
  |   <A HREF="ROMB782.HTM">$B782/46978</A>      Exit String Mode
  |   <A HREF="ROMB78B.HTM">$B78B/46987</A>      Evaluate &lt;asc&gt;
  |   <A HREF="ROMB79B.HTM">$B79B/47003</A>      Evaluate Text to 1 Byte in XR
  |   <A HREF="ROMB7AD.HTM">$B7AD/47021</A>      Evaluate &lt;val&gt;
  |   <A HREF="ROMB7B5.HTM">$B7B5/47029</A>      Convert ASCII String to Flpt
  |   <A HREF="ROMB7EB.HTM">$B7EB/47083</A>      Get parameters for POKE/WAIT
  |   <A HREF="ROMB7F7.HTM">$B7F7/47095</A>      Convert FAC#1 to Integer in LINNUM
  |   <A HREF="ROMB80D.HTM">$B80D/47117</A>      Evaluate &lt;peek&gt;
  |   <A HREF="ROMB824.HTM">$B824/47140</A>      Perform [poke]
  |   <A HREF="ROMB82D.HTM">$B82D/47149</A>      Perform [wait]
  |   <A HREF="ROMB849.HTM">$B849/47177</A>      Add 0.5 to FAC#1
  |   <A HREF="ROMB850.HTM">$B850/47184</A>      Perform Subtraction
  |   <A HREF="ROMB862.HTM">$B862/47202</A>      Normalise Addition
  |   <A HREF="ROMB867.HTM">$B867/47207</A>      Perform Addition
  |   <A HREF="ROMB947.HTM">$B947/47431</A>      2's Complement FAC#1
  |   <A HREF="ROMB97E.HTM">$B97E/47486</A>      Output ?OVERFLOW Error
  |   <A HREF="ROMB983.HTM">$B983/47491</A>      Multiply by Zero Byte
  |   <A HREF="ROMB9BC.HTM">$B9BC/47548</A>      Table of Flpt Constants  1.00
  |   <A HREF="ROMB9C1.HTM">$B9C1/47553</A>      Table of Flpt Constants  #03
  |   <A HREF="ROMB9C2.HTM">$B9C2/47554</A>      Table of Flpt Constants  0.434255942
  |   <A HREF="ROMB9C7.HTM">$B9C7/47559</A>      Table of Flpt Constants  0.57658454
  |   <A HREF="ROMB9CC.HTM">$B9CC/47564</A>      Table of Flpt Constants  0.961800759
  |   <A HREF="ROMB9D1.HTM">$B9D1/47569</A>      Table of Flpt Constants  2.885390073
  |   <A HREF="ROMB9D6.HTM">$B9D6/47574</A>      Table of Flpt Constants  0.707106781
  |   <A HREF="ROMB9DB.HTM">$B9DB/47579</A>      Table of Flpt Constants  1.41421356
  |   <A HREF="ROMB9E0.HTM">$B9E0/47584</A>      Table of Flpt Constants  -0.5
  |   <A HREF="ROMB9E5.HTM">$B9E5/47589</A>      Table of Flpt Constants  0.693147181
  |   <A HREF="ROMB9EA.HTM">$B9EA/47594</A>      Evaluate &lt;log&gt;
  |   <A HREF="ROMBA28.HTM">$BA28/47656</A>      Perform Multiply
  |   <A HREF="ROMBA59.HTM">$BA59/47705</A>      Multiply by a Byte
  |   <A HREF="ROMBA8C.HTM">$BA8C/47756</A>      Load FAC#2 From Memory
  |   <A HREF="ROMBAB7.HTM">$BAB7/47799</A>      Test Both Accumulators
  |   <A HREF="ROMBAD4.HTM">$BAD4/47828</A>      Overflow / Underflow
  |   <A HREF="ROMBAE2.HTM">$BAE2/47842</A>      Multiply FAC#1 by 10
  |   <A HREF="ROMBAF9.HTM">$BAF9/47865</A>      Constant 10 in Flpt
  |   <A HREF="ROMBAFE.HTM">$BAFE/47870</A>      Divide FAC#1 by 10
  |   <A HREF="ROMBB07.HTM">$BB07/47879</A>      Divide FAC#2 by Flpt at (AC/YR)
  |   <A HREF="ROMBB0F.HTM">$BB0F/47887</A>      Divide FAC#2 by FAC#1
  |   <A HREF="ROMBBA2.HTM">$BBA2/48034</A>      Load FAC#1 From Memory
  |   <A HREF="ROMBBC7.HTM">$BBC7/48071</A>      Store FAC#1 in Memory
  |   <A HREF="ROMBBFC.HTM">$BBFC/48124</A>      Copy FAC#2 into FAC#1
  |   <A HREF="ROMBC0C.HTM">$BC0C/48140</A>      Copy FAC#1 into FAC#2
  |   <A HREF="ROMBC1B.HTM">$BC1B/48155</A>      Round FAC#1
  |   <A HREF="ROMBC2B.HTM">$BC2B/48171</A>      Check Sign of FAC#1
  |   <A HREF="ROMBC39.HTM">$BC39/48185</A>      Evaluate &lt;sgn&gt;
  |   <A HREF="ROMBC58.HTM">$BC58/48216</A>      Evaluate &lt;abs&gt;
  |   <A HREF="ROMBC5B.HTM">$BC5B/48219</A>      Compare FAC#1 With Memory
  |   <A HREF="ROMBC9B.HTM">$BC9B/48283</A>      Convert FAC#1 to Integer
  |   <A HREF="ROMBCCC.HTM">$BCCC/48332</A>      Evaluate &lt;int&gt;
  |   <A HREF="ROMBCF3.HTM">$BCF3/48371</A>      Convert ASCII String to a Number in FAC
  |   <A HREF="ROMBDB3.HTM">$BDB3/48563</A>      String Conversion Constants    99999999
  |   <A HREF="ROMBDB8.HTM">$BDB8/48568</A>      String Conversion Constants   999999999
  |   <A HREF="ROMBDBD.HTM">$BDBD/48573</A>      String Conversion Constants  1000000000
  |   <A HREF="ROMBDC2.HTM">$BDC2/48578</A>      Output 'IN' and Line Number
  |   <A HREF="ROMBDCD.HTM">$BDCD/48589</A>      Output Positive Integer in A/X
  |   <A HREF="ROMBDDD.HTM">$BDDD/48605</A>      Convert FAC#1 to ASCII String
  |   <A HREF="ROMBE68.HTM">$BE68/48744</A>      Convert TI to String
  |   <A HREF="ROMBF11.HTM">$BF11/48913</A>      Table of Constants  0.5
  |   <A HREF="ROMBF16.HTM">$BF16/48918</A>      Table of Constants  4-byte powers of 10
  |   <A HREF="ROMBF3A.HTM">$BF3A/48954</A>      Table of Constants  TI Constants
  |   <A HREF="ROMBF71.HTM">$BF71/49009</A>      Evaluate &lt;sqr&gt;
  |   <A HREF="ROMBF7B.HTM">$BF7B/49019</A>      Evaluate &lt;power&gt;
  |   <A HREF="ROMBFB4.HTM">$BFB4/49076</A>      Negate FAC#1
  |   <A HREF="ROMBFBF.HTM">$BFBF/49087</A>      Table of Constants  1.44269504
  |   <A HREF="ROMBFC4.HTM">$BFC4/49092</A>      Table of Constants  #07
  |   <A HREF="ROMBFC5.HTM">$BFC5/49093</A>      Table of Constants  2.149875 E-5
  |   <A HREF="ROMBFCA.HTM">$BFCA/49098</A>      Table of Constants  1.435231 E-4
  |   <A HREF="ROMBFCF.HTM">$BFCF/49103</A>      Table of Constants  1.342263 E-3
  |   <A HREF="ROMBFD4.HTM">$BFD4/49108</A>      Table of Constants  9.6414017 E-3
  |   <A HREF="ROMBFD9.HTM">$BFD9/49113</A>      Table of Constants  5.550513 E-2
  |   <A HREF="ROMBFDE.HTM">$BFDE/49118</A>      Table of Constants  2.402263 E-4
  |   <A HREF="ROMBFE3.HTM">$BFE3/49123</A>      Table of Constants  6.931471 E-1
  |   <A HREF="ROMBFE8.HTM">$BFE8/49128</A>      Table of Constants  1.00
  |   <A HREF="ROMBFED.HTM">$BFED/49133</A>      Evaluate &lt;exp&gt;
  |
  +------------------------------------------------------------------------

   <A HREF="INDEX.HTM">Back to Mainpage</A>

</PRE></BODY></HTML>
