<HTML><HEAD><TITLE>All_About_Your_1541-Online-Help Version 0.23</TITLE></HEAD>
<BODY><PRE>

  +------------------------------------------------------------------------
  |
  |      DISK-DRIVE 1541: ROM-LISTING
  |
  +------------------------------------------------------------------------
  |
  | ROM-Comments were done by Frank Kontros, used with permission.
  |
  |
  | File Manager Routines:
  |
  |   <A HREF="RO41C100.HTM">$C100/49408</A>      Turn LED on for current drive
  |   <A HREF="RO41C118.HTM">$C118/49432</A>      Turn LED on
  |   <A HREF="RO41C123.HTM">$C123/49443</A>      Clear error flags
  |   <A HREF="RO41C12C.HTM">$C12C/49452</A>      Prepare for LED flash after error
  |   <A HREF="RO41C146.HTM">$C146/49478</A>      Interpret command from computer
  |   <A HREF="RO41C194.HTM">$C194/49556</A>      Prepare error msg after executing command
  |   <A HREF="RO41C1BD.HTM">$C1BD/49597</A>      Erase input buffer
  |   <A HREF="RO41C1C8.HTM">$C1C8/49608</A>      Output error msg (track and sector 0)
  |   <A HREF="RO41C1D1.HTM">$C1D1/49617</A>      Check input line
  |   <A HREF="RO41C1E5.HTM">$C1E5/49637</A>      Check ':' on input line
  |   <A HREF="RO41C1EE.HTM">$C1EE/49646</A>      Check input line
  |   <A HREF="RO41C268.HTM">$C268/49768</A>      Search character in input buffer
  |   <A HREF="RO41C2B3.HTM">$C2B3/49843</A>      Check line length
  |   <A HREF="RO41C2DC.HTM">$C2DC/49884</A>      Clear flags for command input
  |   <A HREF="RO41C312.HTM">$C312/49938</A>      Preserve drive number
  |   <A HREF="RO41C33C.HTM">$C33C/49980</A>      Search for drive number
  |   <A HREF="RO41C368.HTM">$C368/50024</A>      Get drive number
  |   <A HREF="RO41C38F.HTM">$C38F/50063</A>      Reverse drive number
  |   <A HREF="RO41C398.HTM">$C398/50072</A>      Check given file type
  |   <A HREF="RO41C3BD.HTM">$C3BD/50109</A>      Check given drive number
  |   <A HREF="RO41C3CA.HTM">$C3CA/50122</A>      Verify drive number
  |   <A HREF="RO41C440.HTM">$C440/50240</A>      Flags for drive check
  |   <A HREF="RO41C44F.HTM">$C44F/50255</A>      Search for file in directory
  |   <A HREF="RO41C48B.HTM">$C48B/50315</A>      ?
  |   <A HREF="RO41C4D8.HTM">$C4D8/50392</A>      ?
  |   <A HREF="RO41C5AC.HTM">$C5AC/50604</A>      ?
  |   <A HREF="RO41C63D.HTM">$C63D/50749</A>      Test and initalise drive
  |   <A HREF="RO41C66E.HTM">$C66E/50798</A>      Name of file in directory buffer
  |   <A HREF="RO41C688.HTM">$C688/50824</A>      Copy filename to work buffer
  |   <A HREF="RO41C6A6.HTM">$C6A6/50854</A>      Search for end of name in command
  |   <A HREF="RO41C6CE.HTM">$C6CE/50894</A>      ?
  |   <A HREF="RO41C6DE.HTM">$C6DE/50910</A>      ?
  |   <A HREF="RO41C7AC.HTM">$C7AC/51116</A>      Clear Directory Output Buffer
  |   <A HREF="RO41C7B7.HTM">$C7B7/51127</A>      Create header with disk name
  |   <A HREF="RO41C806.HTM">$C806/51206</A>      Print 'blocks free.'
  |   <A HREF="RO41C817.HTM">$C817/51223</A>      'Blocks free.'
  |   <A HREF="RO41C823.HTM">$C823/51235</A>      Perform [S] - Scratch command
  |   <A HREF="RO41C87D.HTM">$C87D/51325</A>      Erase file
  |   <A HREF="RO41C8B6.HTM">$C8B6/51382</A>      Erase dir entry
  |   <A HREF="RO41C8C1.HTM">$C8C1/51393</A>      Perform [D] - Backup command (Unused)
  |   <A HREF="RO41C8C6.HTM">$C8C6/51398</A>      Format disk
  |   <A HREF="RO41C8F0.HTM">$C8F0/51440</A>      Perform [C] - Copy command
  |   <A HREF="RO41C9A1.HTM">$C9A1/51617</A>      ?
  |   <A HREF="RO41C9A7.HTM">$C9A7/51623</A>      ?
  |   <A HREF="RO41C9D5.HTM">$C9D5/51669</A>      ?
  |   <A HREF="RO41C9FA.HTM">$C9FA/51706</A>      ?
  |   <A HREF="RO41CA35.HTM">$CA35/51765</A>      ?
  |   <A HREF="RO41CA88.HTM">$CA88/51848</A>      Perform [R] - Rename command
  |   <A HREF="RO41CACC.HTM">$CACC/51916</A>      Check if file present
  |   <A HREF="RO41CAF8.HTM">$CAF8/51960</A>      Perform [M] - Memory command
  |   <A HREF="RO41CB20.HTM">$CB20/52000</A>      M-R memory read
  |   <A HREF="RO41CB50.HTM">$CB50/52048</A>      M-W memory write
  |   <A HREF="RO41CB5C.HTM">$CB5C/52060</A>      Perform [U] - User command
  |   <A HREF="RO41CB84.HTM">$CB84/52100</A>      Open direct access channel, number
  |   <A HREF="RO41CC1B.HTM">$CC1B/52251</A>      Perform [B] - Block/Buffer command
  |   <A HREF="RO41CC5D.HTM">$CC5D/52317</A>      Block commands &quot;AFRWEP&quot;
  |   <A HREF="RO41CC63.HTM">$CC63/52323</A>      Block command vectors
  |   <A HREF="RO41CC6F.HTM">$CC6F/52335</A>      Get parameters form block commands
  |   <A HREF="RO41CCF2.HTM">$CCF2/52466</A>      Decimal values  1, 10, 100
  |   <A HREF="RO41CCF5.HTM">$CCF5/52469</A>      B-F block free
  |   <A HREF="RO41CCFE.HTM">$CCFE/52478</A>      ?
  |   <A HREF="RO41CD03.HTM">$CD03/52483</A>      B-A block allocate
  |   <A HREF="RO41CD36.HTM">$CD36/52534</A>      Read block to buffer
  |   <A HREF="RO41CD3C.HTM">$CD3C/52540</A>      Get byte from buffer
  |   <A HREF="RO41CD42.HTM">$CD42/52546</A>      Read block from disk
  |   <A HREF="RO41CD56.HTM">$CD56/52566</A>      B-R block read
  |   <A HREF="RO41CD5F.HTM">$CD5F/52575</A>      U1, Block read without changing buffer pointer
  |   <A HREF="RO41CD73.HTM">$CD73/52595</A>      B-W block write
  |   <A HREF="RO41CD97.HTM">$CD97/52631</A>      U2, Block write without changing buffer pointer
  |   <A HREF="RO41CDA3.HTM">$CDA3/52643</A>      B-E block execute
  |   <A HREF="RO41CDBD.HTM">$CDBD/52669</A>      B-P block pointer
  |   <A HREF="RO41CDD2.HTM">$CDD2/52690</A>      Open channel
  |   <A HREF="RO41CDF2.HTM">$CDF2/52722</A>      Check buffer number and open channel
  |   <A HREF="RO41CE0E.HTM">$CE0E/52750</A>      Set pointer for REL file
  |   <A HREF="RO41CE2C.HTM">$CE2C/52780</A>      ?
  |   <A HREF="RO41CE6E.HTM">$CE6E/52846</A>      Divide by 254
  |   <A HREF="RO41CE71.HTM">$CE71/52849</A>      Divide by 120
  |   <A HREF="RO41CED9.HTM">$CED9/52953</A>      Erase work storage
  |   <A HREF="RO41CEE2.HTM">$CEE2/52962</A>      Left shift 3-byte register twice
  |   <A HREF="RO41CEE5.HTM">$CEE5/52965</A>      Left shift 3-byte register once
  |   <A HREF="RO41CEED.HTM">$CEED/52973</A>      Add 3-byte registers
  |   <A HREF="RO41CEFA.HTM">$CEFA/52986</A>      ?
  |   <A HREF="RO41CF09.HTM">$CF09/53001</A>      ?
  |   <A HREF="RO41CF1E.HTM">$CF1E/53022</A>      ?
  |   <A HREF="RO41CF8C.HTM">$CF8C/53132</A>      Change buffer
  |   <A HREF="RO41CF9B.HTM">$CF9B/53147</A>      Write data in buffer
  |   <A HREF="RO41CFF1.HTM">$CFF1/53233</A>      Write data byte in buffer
  |   <A HREF="RO41D005.HTM">$D005/53253</A>      Perform [I] - Initalise command
  |   <A HREF="RO41D00E.HTM">$D00E/53262</A>      Read BAM from disk
  |   <A HREF="RO41D042.HTM">$D042/53314</A>      Load BAM
  |   <A HREF="RO41D075.HTM">$D075/53365</A>      Calculate blocks free
  |   <A HREF="RO41D09B.HTM">$D09B/53403</A>      ?
  |   <A HREF="RO41D0AF.HTM">$D0AF/53423</A>      ?
  |   <A HREF="RO41D0C3.HTM">$D0C3/53443</A>      Read block
  |   <A HREF="RO41D0C7.HTM">$D0C7/53447</A>      Write block
  |   <A HREF="RO41D0EB.HTM">$D0EB/53483</A>      Open channel for reading
  |   <A HREF="RO41D107.HTM">$D107/53511</A>      Open channel for writing
  |   <A HREF="RO41D125.HTM">$D125/53541</A>      Check for file type REL
  |   <A HREF="RO41D12F.HTM">$D12F/53551</A>      Get buffer and channel numbers
  |   <A HREF="RO41D137.HTM">$D137/53559</A>      Get a byte from buffer
  |   <A HREF="RO41D156.HTM">$D156/53590</A>      Get byte and read next block
  |   <A HREF="RO41D19D.HTM">$D19D/53661</A>      Write byte in buffer and block
  |   <A HREF="RO41D1C6.HTM">$D1C6/53702</A>      Increment buffer pointer
  |   <A HREF="RO41D1D3.HTM">$D1D3/53715</A>      Get drive number
  |   <A HREF="RO41D1DF.HTM">$D1DF/53727</A>      Find write channel and buffer
  |   <A HREF="RO41D1E2.HTM">$D1E2/53730</A>      Find read channel and buffer
  |   <A HREF="RO41D227.HTM">$D227/53799</A>      Close channel
  |   <A HREF="RO41D25A.HTM">$D25A/53850</A>      Free buffer
  |   <A HREF="RO41D28E.HTM">$D28E/53902</A>      Find buffer
  |   <A HREF="RO41D2BA.HTM">$D2BA/53946</A>      ?
  |   <A HREF="RO41D2DA.HTM">$D2DA/53978</A>      ?
  |   <A HREF="RO41D307.HTM">$D307/54023</A>      Close all channels
  |   <A HREF="RO41D313.HTM">$D313/54035</A>      Close all channels of other drives
  |   <A HREF="RO41D339.HTM">$D339/54073</A>      ?
  |   <A HREF="RO41D37F.HTM">$D37F/54143</A>      Find channel and allocate
  |   <A HREF="RO41D39B.HTM">$D39B/54171</A>      Get byte for output
  |   <A HREF="RO41D44D.HTM">$D44D/54349</A>      Read next block
  |   <A HREF="RO41D460.HTM">$D460/54368</A>      Read block
  |   <A HREF="RO41D464.HTM">$D464/54372</A>      Write block
  |   <A HREF="RO41D475.HTM">$D475/54389</A>      Allocate buffer and read block
  |   <A HREF="RO41D486.HTM">$D486/54406</A>      Allocate new block
  |   <A HREF="RO41D48D.HTM">$D48D/54413</A>      Write dir block
  |   <A HREF="RO41D4C8.HTM">$D4C8/54472</A>      Set buffer pointer
  |   <A HREF="RO41D4DA.HTM">$D4DA/54490</A>      Close internal channel
  |   <A HREF="RO41D4E8.HTM">$D4E8/54504</A>      Set buffer pointer
  |   <A HREF="RO41D4F6.HTM">$D4F6/54518</A>      Get byte from buffer
  |   <A HREF="RO41D506.HTM">$D506/54534</A>      Check track and sector numbers
  |   <A HREF="RO41D552.HTM">$D552/54610</A>      Get track and sector numbers for current job
  |   <A HREF="RO41D55F.HTM">$D55F/54623</A>      Check for vaild track and sector numbers
  |   <A HREF="RO41D572.HTM">$D572/54642</A>      DOS mismatch error
  |   <A HREF="RO41D586.HTM">$D586/54662</A>      Read block
  |   <A HREF="RO41D58A.HTM">$D58A/54666</A>      Write block
  |   <A HREF="RO41D599.HTM">$D599/54681</A>      Verify execution
  |   <A HREF="RO41D5C6.HTM">$D5C6/54726</A>      Additional attempts for read errors
  |   <A HREF="RO41D676.HTM">$D676/54902</A>      Move head by half a track
  |   <A HREF="RO41D693.HTM">$D693/54931</A>      Move head one track in or out
  |   <A HREF="RO41D6A6.HTM">$D6A6/54950</A>      Attempt command execution multiple times
  |   <A HREF="RO41D6D0.HTM">$D6D0/54992</A>      Transmit param to disk controller
  |   <A HREF="RO41D6E4.HTM">$D6E4/55012</A>      Enter file in dir
  |   <A HREF="RO41D7B4.HTM">$D7B4/55220</A>      OPEN command, secondary addr 15
  |   <A HREF="RO41D7C7.HTM">$D7C7/55239</A>      -Check '*' Last file
  |   <A HREF="RO41D7F3.HTM">$D7F3/55283</A>      -Check '$' Directory
  |   <A HREF="RO41D815.HTM">$D815/55317</A>      -Check '#' Channel
  |   <A HREF="RO41D8F5.HTM">$D8F5/55541</A>      Open a file with overwriting (@)
  |   <A HREF="RO41D940.HTM">$D940/55616</A>      ?
  |   <A HREF="RO41D9A0.HTM">$D9A0/55712</A>      Open file for reading
  |   <A HREF="RO41D9E3.HTM">$D9E3/55779</A>      Open file for writing
  |   <A HREF="RO41DA09.HTM">$DA09/55817</A>      Check file type and control mode
  |   <A HREF="RO41DA2A.HTM">$DA2A/55850</A>      Preparation for append
  |   <A HREF="RO41DA55.HTM">$DA55/55893</A>      Open directory
  |   <A HREF="RO41DAC0.HTM">$DAC0/56000</A>      Close routine
  |   <A HREF="RO41DB02.HTM">$DB02/56066</A>      Close file
  |   <A HREF="RO41DB62.HTM">$DB62/56162</A>      Write last block
  |   <A HREF="RO41DBA5.HTM">$DBA5/56229</A>      Directory entry
  |   <A HREF="RO41DC46.HTM">$DC46/56390</A>      Read block, allocate buffer
  |   <A HREF="RO41DCB6.HTM">$DCB6/56502</A>      Reset pointer
  |   <A HREF="RO41DCDA.HTM">$DCDA/56538</A>      Construct a new block
  |   <A HREF="RO41DD8D.HTM">$DD8D/56717</A>      Write byte in side-sector block
  |   <A HREF="RO41DD95.HTM">$DD95/56725</A>      Manipulate flags
  |   <A HREF="RO41DDA6.HTM">$DDA6/56742</A>      ?
  |   <A HREF="RO41DDAB.HTM">$DDAB/56747</A>      Verify command code for writing
  |   <A HREF="RO41DDB7.HTM">$DDB7/56759</A>      ?
  |   <A HREF="RO41DDF1.HTM">$DDF1/56817</A>      Write a block of a REL file
  |   <A HREF="RO41DDFD.HTM">$DDFD/56829</A>      Write bytes for following track
  |   <A HREF="RO41DE0C.HTM">$DE0C/56844</A>      Get following track and sector numbers
  |   <A HREF="RO41DE19.HTM">$DE19/56857</A>      Following track for last block
  |   <A HREF="RO41DE2B.HTM">$DE2B/56875</A>      buffer pointer to zero
  |   <A HREF="RO41DE3B.HTM">$DE3B/56891</A>      Get track and sector
  |   <A HREF="RO41DE50.HTM">$DE50/56912</A>      Write
  |   <A HREF="RO41DE57.HTM">$DE57/56919</A>      Read
  |   <A HREF="RO41DE5E.HTM">$DE5E/56926</A>      Write
  |   <A HREF="RO41DE65.HTM">$DE65/56933</A>      Read
  |   <A HREF="RO41DE6C.HTM">$DE6C/56940</A>      Write
  |   <A HREF="RO41DE73.HTM">$DE73/56947</A>      Read
  |   <A HREF="RO41DE95.HTM">$DE95/56981</A>      Get following track and sector from buffer
  |   <A HREF="RO41DEA5.HTM">$DEA5/56997</A>      Copy buffer contents
  |   <A HREF="RO41DEC1.HTM">$DEC1/57025</A>      Erase buffer Y
  |   <A HREF="RO41DED2.HTM">$DED2/57042</A>      Get side-sector number
  |   <A HREF="RO41DEDC.HTM">$DEDC/57052</A>      Set buffer pointer to side-sector
  |   <A HREF="RO41DEE9.HTM">$DEE9/57065</A>      Buffer pointer for side-sector
  |   <A HREF="RO41DEF8.HTM">$DEF8/57080</A>      Get side sector and buffer pointer
  |   <A HREF="RO41DF1B.HTM">$DF1B/57115</A>      Read side-sector
  |   <A HREF="RO41DF21.HTM">$DF21/57121</A>      Write side-sector
  |   <A HREF="RO41DF45.HTM">$DF45/57157</A>      Set buffer pointer in side-sector
  |   <A HREF="RO41DF4C.HTM">$DF4C/57164</A>      Calculate number of blocks in a REL file
  |   <A HREF="RO41DF66.HTM">$DF66/57190</A>      Verify side-sector in buffer
  |   <A HREF="RO41DF93.HTM">$DF93/57235</A>      Get buffer number
  |   <A HREF="RO41DF9E.HTM">$DF9E/57246</A>      ?
  |   <A HREF="RO41DFB7.HTM">$DFB7/57271</A>      ?
  |   <A HREF="RO41DFC2.HTM">$DFC2/57282</A>      ?
  |   <A HREF="RO41DFD0.HTM">$DFD0/57296</A>      Get next record iin REL file
  |   <A HREF="RO41E03C.HTM">$E03C/57404</A>      Write block and read next block
  |   <A HREF="RO41E07C.HTM">$E07C/57468</A>      Write a byte in a record
  |   <A HREF="RO41E0AB.HTM">$E0AB/57515</A>      Write byte in REL file
  |   <A HREF="RO41E0F3.HTM">$E0F3/57587</A>      Fill record with 0s
  |   <A HREF="RO41E105.HTM">$E105/57605</A>      Write buffer number in table
  |   <A HREF="RO41E120.HTM">$E120/57632</A>      Get byte from REL file
  |   <A HREF="RO41E1CB.HTM">$E1CB/57803</A>      Get last side-sector
  |   <A HREF="RO41E207.HTM">$E207/57863</A>      Perform [P] - Position command
  |   <A HREF="RO41E2E2.HTM">$E2E2/58082</A>      Divide data blocks into records
  |   <A HREF="RO41E304.HTM">$E304/58116</A>      Set pointer to next record
  |   <A HREF="RO41E31C.HTM">$E31C/58140</A>      Expand side-sector
  |   <A HREF="RO41E44E.HTM">$E44E/58446</A>      Write side-sector and allocate new
  |   <A HREF="RO41E4FC.HTM">$E4FC/58620</A>      Table of Error Messages: 00,     Ok
  |   <A HREF="RO41E500.HTM">$E500/58624</A>      Error Message: 20,21,22,23,24,27, Read error
  |   <A HREF="RO41E50B.HTM">$E50B/58635</A>      Error Message: 52, File too large
  |   <A HREF="RO41E517.HTM">$E517/58647</A>      Error Message: 50, Record not present
  |   <A HREF="RO41E522.HTM">$E522/58658</A>      Error Message: 51, Overflow in record
  |   <A HREF="RO41E52F.HTM">$E52F/58671</A>      Error Message: 25,28, Write error
  |   <A HREF="RO41E533.HTM">$E533/58675</A>      Error Message: 26, Write protect on
  |   <A HREF="RO41E540.HTM">$E540/58688</A>      Error Message: 29, Disk id mismatch
  |   <A HREF="RO41E546.HTM">$E546/58694</A>      Error Message: 30,31,32,33,34, Syntax error
  |   <A HREF="RO41E552.HTM">$E552/58706</A>      Error Message: 60, Write file open
  |   <A HREF="RO41E556.HTM">$E556/58710</A>      Error Message: 63, File exists
  |   <A HREF="RO41E55F.HTM">$E55F/58719</A>      Error Message: 64, File type mismatch
  |   <A HREF="RO41E567.HTM">$E567/58727</A>      Error Message: 65, No block
  |   <A HREF="RO41E570.HTM">$E570/58736</A>      Error Message: 66,67, Illegal track or sector
  |   <A HREF="RO41E589.HTM">$E589/58761</A>      Error Message: 61, File not open
  |   <A HREF="RO41E58D.HTM">$E58D/58765</A>      Error Message: 39,62, File not found
  |   <A HREF="RO41E592.HTM">$E592/58770</A>      Error Message: 01, Files scratched
  |   <A HREF="RO41E59F.HTM">$E59F/58783</A>      Error Message: 70, No channel
  |   <A HREF="RO41E5AA.HTM">$E5AA/58794</A>      Error Message: 71, Dir error
  |   <A HREF="RO41E5AF.HTM">$E5AF/58799</A>      Error Message: 72, Disk full
  |   <A HREF="RO41E5B6.HTM">$E5B6/58806</A>      Error Message: 73, Cbm dos v2.6 1541
  |   <A HREF="RO41E5C8.HTM">$E5C8/58824</A>      Error Message: 74, Drive not ready
  |   <A HREF="RO41E5D5.HTM">$E5D5/58837</A>      Indexed words: 09 Error
  |   <A HREF="RO41E5DB.HTM">$E5DB/58843</A>      Indexed words: 0A Write
  |   <A HREF="RO41E5E1.HTM">$E5E1/58849</A>      Indexed words: 03 File
  |   <A HREF="RO41E5E6.HTM">$E5E6/58854</A>      Indexed words: 04 Open
  |   <A HREF="RO41E5EB.HTM">$E5EB/58859</A>      Indexed words: 05 Mismatch
  |   <A HREF="RO41E5F4.HTM">$E5F4/58868</A>      Indexed words: 06 Not
  |   <A HREF="RO41E5F8.HTM">$E5F8/58872</A>      Indexed words: 07 Found
  |   <A HREF="RO41E5FE.HTM">$E5FE/58878</A>      Indexed words: 08 Disk
  |   <A HREF="RO41E603.HTM">$E603/58883</A>      Indexed words: 0B Record
  |   <A HREF="RO41E60A.HTM">$E60A/58890</A>      Prepare error number and message
  |   <A HREF="RO41E645.HTM">$E645/58949</A>      Print error message into error buffer
  |   <A HREF="RO41E680.HTM">$E680/59008</A>      TALK
  |   <A HREF="RO41E688.HTM">$E688/59016</A>      LISTEN
  |   <A HREF="RO41E69B.HTM">$E69B/59035</A>      Convert BIN to 2-Ascii (error message buffer)
  |   <A HREF="RO41E6AB.HTM">$E6AB/59051</A>      Convert BCD to 2-Ascii (error message buffer)
  |   <A HREF="RO41E6BC.HTM">$E6BC/59068</A>      Write OK in buffer
  |   <A HREF="RO41E6C1.HTM">$E6C1/59073</A>      Print error on track 00,00 to error buffer
  |   <A HREF="RO41E6C7.HTM">$E6C7/59079</A>      Print error on current track to error buffer
  |   <A HREF="RO41E706.HTM">$E706/59142</A>      Write error message string to buffer
  |   <A HREF="RO41E754.HTM">$E754/59220</A>      Get character and in buffer
  |   <A HREF="RO41E767.HTM">$E767/59239</A>      Get a char of the error message
  |   <A HREF="RO41E775.HTM">$E775/59253</A>      Increment pointer
  |   <A HREF="RO41E77F.HTM">$E77F/59263</A>      Dummy subroutine
  |   <A HREF="RO41E780.HTM">$E780/59264</A>      Check for auto start - removed
  |   <A HREF="RO41E7A3.HTM">$E7A3/59299</A>      Perform [&amp;] - USR file execute command
  |   <A HREF="RO41E84B.HTM">$E84B/59467</A>      Generate checksum
  |   <A HREF="RO41E853.HTM">$E853/59475</A>      IRQ routine for serial bus
  |   <A HREF="RO41E85B.HTM">$E85B/59483</A>      Service the serial bus
  |   <A HREF="RO41E909.HTM">$E909/59657</A>      Send data
  |   <A HREF="RO41E99C.HTM">$E99C/59804</A>      DATA OUT lo
  |   <A HREF="RO41E9A5.HTM">$E9A5/59813</A>      DATA OUT hi
  |   <A HREF="RO41E9AE.HTM">$E9AE/59822</A>      CLOCK OUT hi
  |   <A HREF="RO41E9B7.HTM">$E9B7/59831</A>      CLOCK OUT lo
  |   <A HREF="RO41E9C0.HTM">$E9C0/59840</A>      Read IEEE port
  |   <A HREF="RO41E9C9.HTM">$E9C9/59849</A>      Get data byte from bus
  |   <A HREF="RO41E9F2.HTM">$E9F2/59890</A>      Accept byte with EOI
  |   <A HREF="RO41EA2E.HTM">$EA2E/59950</A>      Accept data from serial bus
  |   <A HREF="RO41EA59.HTM">$EA59/59993</A>      Test for ATN
  |   <A HREF="RO41EA6E.HTM">$EA6E/60014</A>      Flash LED for hardware defects, self-test
  |   <A HREF="RO41EAA0.HTM">$EAA0/60064</A>      Power-up RESET routine
  |   <A HREF="RO41EBFF.HTM">$EBFF/60415</A>      Wait loop
  |   <A HREF="RO41EC9E.HTM">$EC9E/60574</A>      Load dir
  |   <A HREF="RO41ED23.HTM">$ED23/60707</A>      ?
  |   <A HREF="RO41ED59.HTM">$ED59/60761</A>      Transmit dir line
  |   <A HREF="RO41ED67.HTM">$ED67/60775</A>      Get byte from buffer
  |   <A HREF="RO41ED84.HTM">$ED84/60804</A>      Perform [V] - Validate command
  |   <A HREF="RO41EDB3.HTM">$EDB3/60851</A>      ?
  |   <A HREF="RO41EDE5.HTM">$EDE5/60901</A>      Allocate file blocks in BAM
  |   <A HREF="RO41EE0D.HTM">$EE0D/60941</A>      Perform [N] - New (Format) command
  |   <A HREF="RO41EEB7.HTM">$EEB7/61111</A>      Create BAM
  |   <A HREF="RO41EEF4.HTM">$EEF4/61172</A>      Write BAM if needed
  |   <A HREF="RO41EF3A.HTM">$EF3A/61242</A>      Set buffer pointer for BAM
  |   <A HREF="RO41EF4D.HTM">$EF4D/61261</A>      Get number of free blocks for dir
  |   <A HREF="RO41EF5C.HTM">$EF5C/61276</A>      Mark block as free
  |   <A HREF="RO41EF88.HTM">$EF88/61320</A>      Set flag for BAM changed
  |   <A HREF="RO41EF90.HTM">$EF90/61328</A>      Mark block as allocated
  |   <A HREF="RO41EFCF.HTM">$EFCF/61391</A>      Erase bit for sector in BAM entry
  |   <A HREF="RO41EFE9.HTM">$EFE9/61417</A>      Powers of 2
  |   <A HREF="RO41EFF1.HTM">$EFF1/61425</A>      Write BAM after change
  |   <A HREF="RO41F005.HTM">$F005/61445</A>      Erase BAM buffer
  |   <A HREF="RO41F011.HTM">$F011/61457</A>      ?
  |   <A HREF="RO41F05B.HTM">$F05B/61531</A>      ?
  |   <A HREF="RO41F0D1.HTM">$F0D1/61649</A>      ?
  |   <A HREF="RO41F0DF.HTM">$F0DF/61663</A>      ?
  |   <A HREF="RO41F10F.HTM">$F10F/61711</A>      Get buffer number for BAM
  |   <A HREF="RO41F119.HTM">$F119/61721</A>      Buffer number for BAM
  |   <A HREF="RO41F11E.HTM">$F11E/61726</A>      Find and allocate free block
  |   <A HREF="RO41F1A9.HTM">$F1A9/61865</A>      Find free sector and allocate
  |   <A HREF="RO41F1FA.HTM">$F1FA/61946</A>      Find free sectors in current track
  |   <A HREF="RO41F220.HTM">$F220/61984</A>      Verify number of free blocks in BAM
  |   <A HREF="RO41F24B.HTM">$F24B/62027</A>      Establish number of sectors per track
  |   <A HREF="RO41F258.HTM">$F258/62040</A>      Dummy subroutine
  |
  | Disk Controller Routines:
  |
  |   <A HREF="RO41F259.HTM">$F259/62041</A>      Initialise disk controller
  |   <A HREF="RO41F2B0.HTM">$F2B0/62128</A>      IRQ routine for disk controller
  |   <A HREF="RO41F2F9.HTM">$F2F9/62201</A>      Head transport
  |   <A HREF="RO41F36E.HTM">$F36E/62318</A>      Execute program in buffer
  |   <A HREF="RO41F37C.HTM">$F37C/62332</A>      Bump, find track 1 (head at stop)
  |   <A HREF="RO41F393.HTM">$F393/62355</A>      Initialise pointer in buffer
  |   <A HREF="RO41F3B1.HTM">$F3B1/62385</A>      Read block header, verify ID
  |   <A HREF="RO41F410.HTM">$F410/62480</A>      Preserve block header
  |   <A HREF="RO41F418.HTM">$F418/62488</A>      Work Return value 01 (OK) into queue
  |   <A HREF="RO41F41B.HTM">$F41B/62491</A>      Work Return value 0B (READ ERROR) into queue
  |   <A HREF="RO41F41E.HTM">$F41E/62494</A>      Work Return value 09 (READ ERROR) into queue
  |   <A HREF="RO41F423.HTM">$F423/62499</A>      Job optimisation
  |   <A HREF="RO41F4CA.HTM">$F4CA/62666</A>      Test command code further
  |   <A HREF="RO41F4D1.HTM">$F4D1/62673</A>      Read sector
  |   <A HREF="RO41F50A.HTM">$F50A/62730</A>      Find start of data block
  |   <A HREF="RO41F510.HTM">$F510/62736</A>      Read block header
  |   <A HREF="RO41F556.HTM">$F556/62806</A>      Wait for SYNC
  |   <A HREF="RO41F56E.HTM">$F56E/62830</A>      Test command code further
  |   <A HREF="RO41F575.HTM">$F575/62837</A>      Write data block to disk
  |   <A HREF="RO41F5E9.HTM">$F5E9/62953</A>      Calculate parity for data buffer
  |   <A HREF="RO41F5F2.HTM">$F5F2/62962</A>      Convert buffer of GCR data into binary
  |   <A HREF="RO41F691.HTM">$F691/63121</A>      Test command code further
  |   <A HREF="RO41F698.HTM">$F698/63128</A>      Compare written data with data on disk
  |   <A HREF="RO41F6CA.HTM">$F6CA/63178</A>      Command code for find sector
  |   <A HREF="RO41F6D0.HTM">$F6D0/63184</A>      Convert 4 binary bytes to 5 GCR bytes
  |   <A HREF="RO41F77F.HTM">$F77F/63359</A>      GCR (5-bit) nybble table
  |   <A HREF="RO41F78F.HTM">$F78F/63375</A>      Convert 260 bytes to 325 bytes group code
  |   <A HREF="RO41F7E6.HTM">$F7E6/63462</A>      Convert 5 GCR bytes to 4 binary bytes
  |   <A HREF="RO41F8A0.HTM">$F8A0/63648</A>      Conversion table GCR to binary - high nybble
  |   <A HREF="RO41F8C0.HTM">$F8C0/63680</A>      Conversion table GCR to binary - low nybble
  |   <A HREF="RO41F8E0.HTM">$F8E0/63712</A>      Decode 69 GCR bytes
  |   <A HREF="RO41F934.HTM">$F934/63796</A>      Convert block header to GCR code
  |   <A HREF="RO41F969.HTM">$F969/63849</A>      Error entry disk controller
  |   <A HREF="RO41F97E.HTM">$F97E/63870</A>      Turn drive motor on
  |   <A HREF="RO41F98F.HTM">$F98F/63887</A>      Turn drive motor off
  |   <A HREF="RO41F99C.HTM">$F99C/63900</A>      Job loop disk controller
  |   <A HREF="RO41F9CB.HTM">$F9CB/63947</A>      ?
  |   <A HREF="RO41F9D9.HTM">$F9D9/63961</A>      ?
  |   <A HREF="RO41FA05.HTM">$FA05/64005</A>      Move head to next track
  |   <A HREF="RO41FA1C.HTM">$FA1C/64028</A>      Calculate number of head steps
  |   <A HREF="RO41FA3B.HTM">$FA3B/64059</A>      Move stepper motor short distance
  |   <A HREF="RO41FA4E.HTM">$FA4E/64078</A>      Load head
  |   <A HREF="RO41FA63.HTM">$FA63/64099</A>      ?
  |   <A HREF="RO41FA7B.HTM">$FA7B/64123</A>      Prepare fast head movement
  |   <A HREF="RO41FA97.HTM">$FA97/64151</A>      Fast head movement
  |   <A HREF="RO41FAA5.HTM">$FAA5/64165</A>      Prepare slow head movement
  |   <A HREF="RO41FAC7.HTM">$FAC7/64199</A>      Formatting
  |   <A HREF="RO41FDA3.HTM">$FDA3/64931</A>      Write SYNC 10240 times, erase track
  |   <A HREF="RO41FDC3.HTM">$FDC3/64963</A>      Read/write ($621/$622) times
  |   <A HREF="RO41FDD3.HTM">$FDD3/64979</A>      Attempt counter for formatting
  |   <A HREF="RO41FDE5.HTM">$FDE5/64997</A>      ?
  |   <A HREF="RO41FDF5.HTM">$FDF5/65013</A>      Copy data from overflow buffer
  |   <A HREF="RO41FE00.HTM">$FE00/65024</A>      Switch to reading
  |   <A HREF="RO41FE0E.HTM">$FE0E/65038</A>      Write $55 10240 times
  |   <A HREF="RO41FE30.HTM">$FE30/65072</A>      Convert header in buffer 0 to GCR code
  |   <A HREF="RO41FE67.HTM">$FE67/65127</A>      Interrupt routine
  |   <A HREF="RO41FE85.HTM">$FE85/65157</A>      Constant: Directory track
  |   <A HREF="RO41FE86.HTM">$FE86/65158</A>      Constant: Start of BAM
  |   <A HREF="RO41FE87.HTM">$FE87/65159</A>      Constant: Length of BAM per track
  |   <A HREF="RO41FE88.HTM">$FE88/65160</A>      Constant: End of BAM
  |   <A HREF="RO41FE89.HTM">$FE89/65161</A>      Table of command words
  |   <A HREF="RO41FE95.HTM">$FE95/65173</A>      Low  byte of command addresses
  |   <A HREF="RO41FEA1.HTM">$FEA1/65185</A>      High byte of command addresses
  |   <A HREF="RO41FEAD.HTM">$FEAD/65197</A>      Bytes for syntax check
  |   <A HREF="RO41FEB2.HTM">$FEB2/65202</A>      File control methods &quot;RWAM&quot;
  |   <A HREF="RO41FEB6.HTM">$FEB6/65206</A>      File types &quot;DSPUL&quot;
  |   <A HREF="RO41FEBB.HTM">$FEBB/65211</A>      Names of file types: 1st letter &quot;DSPUR&quot;
  |   <A HREF="RO41FEC0.HTM">$FEC0/65216</A>      Names of file types: 2nd letter &quot;EERSE&quot;
  |   <A HREF="RO41FEC5.HTM">$FEC5/65221</A>      Names of file types: 3rd letter &quot;LQGRL&quot;
  |   <A HREF="RO41FECA.HTM">$FECA/65226</A>      Error LED bit value
  |   <A HREF="RO41FECD.HTM">$FECD/65229</A>      Masks for bit command
  |   <A HREF="RO41FED1.HTM">$FED1/65233</A>      Number of sectors per track
  |   <A HREF="RO41FED5.HTM">$FED5/65237</A>      'A' marker for 1541 format
  |   <A HREF="RO41FED6.HTM">$FED6/65238</A>      4 track ranges
  |   <A HREF="RO41FED7.HTM">$FED7/65239</A>      Number of tracks
  |   <A HREF="RO41FED8.HTM">$FED8/65240</A>      Tracks on which sector numbers change
  |   <A HREF="RO41FEDB.HTM">$FEDB/65243</A>      Control bytes for head postion
  |   <A HREF="RO41FEE0.HTM">$FEE0/65248</A>      Buffer address high bytes
  |   <A HREF="RO41FEE6.HTM">$FEE6/65254</A>      ROM checksum
  |   <A HREF="RO41FEE7.HTM">$FEE7/65255</A>      From UI command $EB22, to reset (Without RAM/ROM test)
  |   <A HREF="RO41FEEA.HTM">$FEEA/65258</A>      Patch for diagnostic routine from $EA7A
  |   <A HREF="RO41FEF3.HTM">$FEF3/65267</A>      Delay loop for serial bus in 1541 mode, from $E97D
  |   <A HREF="RO41FEFB.HTM">$FEFB/65275</A>      Patch for data output to serial bus, from $E980
  |   <A HREF="RO41FF01.HTM">$FF01/65281</A>      U9 vector, switch 1540/1541
  |   <A HREF="RO41FF10.HTM">$FF10/65296</A>      Patch for reset routine, from $EAA4
  |   <A HREF="RO41FF20.HTM">$FF20/65312</A>      Patch for listen to serial bus, from $E9DC
  |   <A HREF="RO41FF2F.HTM">$FF2F/65327</A>      Unused
  |   <A HREF="RO41FFE6.HTM">$FFE6/65510</A>      Format  [C8C6]
  |   <A HREF="RO41FFE8.HTM">$FFE8/65512</A>      Turn motor off [F98F]
  |   <A HREF="RO41FFEA.HTM">$FFEA/65514</A>      USER vectors: UA, U1  [CD5F]
  |   <A HREF="RO41FFEC.HTM">$FFEC/65516</A>      USER vectors: UB, U2  [CD97]
  |   <A HREF="RO41FFEE.HTM">$FFEE/65518</A>      USER vectors: UC, U3  [0500]
  |   <A HREF="RO41FFF0.HTM">$FFF0/65520</A>      USER vectors: UD, U4  [0503]
  |   <A HREF="RO41FFF2.HTM">$FFF2/65522</A>      USER vectors: UE, U5  [0506]
  |   <A HREF="RO41FFF4.HTM">$FFF4/65524</A>      USER vectors: UF, U6  [0509]
  |   <A HREF="RO41FFF6.HTM">$FFF6/65526</A>      USER vectors: UG, U7  [050C]
  |   <A HREF="RO41FFF8.HTM">$FFF8/65528</A>      USER vectors: UH, U8  [050F]
  |   <A HREF="RO41FFFA.HTM">$FFFA/65530</A>      USER vectors: UI, U9  [FF01]
  |   <A HREF="RO41FFFC.HTM">$FFFC/65532</A>      Hardware vectors: RESET [EAA0]
  |   <A HREF="RO41FFFE.HTM">$FFFE/65534</A>      Hardware vectors: IRQ   [FE67]
  |
  +------------------------------------------------------------------------

</PRE></BODY></HTML>
